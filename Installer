#!/bin/bash
## ┃┏━ ┏━┛━┏┛┏━┃┃  ┃  ┏━┛┏━┃
## ┃┃ ┃━━┃ ┃ ┏━┃┃  ┃  ┏━┛┏┏┛
## ┛┛ ┛━━┛ ┛ ┛ ┛━━┛━━┛━━┛┛ ┛
#
# Warna
MER=$(tput setaf 1)
KUN=$(tput setaf 3)
HIJ=$(tput setaf 2)
BRU=$(tput setaf 4)
BLD=$(tput bold)
RST=$(tput sgr0)

ERROR_LOG="$HOME/RiceError.log"

logo () {
	local text="${1:?}"
	echo -en "
               %%                   
          #%#####*+=                
          @@%@@@@%%#%%              
           %%%%%%%                  
         ##%%%%%###                 
         @%%%%%%%#+#                
         @%%@@@%#**                  
         %%@@@@@%#*  **              
       %%%@@@@@@%%###%               
     %%%%%@@@@@@@%%#   ###          
    %% %%%@@@@@@@@%##%%%%           
   %% %%%@@@@@@@%%%%%               
   %%%%%%%%%@@%%####                
   %%%%%@@@@%%%@@@%%%               
    %%%%%%%@@@@@@%%%%               
    ###%%%@@@@@%@%%%%%              
  ## ###%%%@@@@@@@%#                
       # %%@@@%%%%%                 
           %%%%%%%%                 
           ####%%##*#               
              #####%%%              
      Dotfiles "${HIJ}"Termux"${RST}"\n\n"
}

logo "Welcome!"
while true; do
    read -rp " Do you wish to continue? [y/N]: " yn
    case $yn in
        [Yy]* ) break ;;
        [Nn]* ) exit ;;
        * ) printf " Error: just write 'y' or 'n'\n\n" ;;
    esac
done

# Daftar package untuk Termux
dependency=(bat eza neofetch screenfetch git proot-distro termux-api vim wget zsh)

is_installed() {
    command -v "$1" >/dev/null 2>&1 || dpkg -s "$1" >/dev/null 2>&1
}

printf "%s%sChecking for required packages...%s\n" "${BLD}" "${BRU}" "${RST}"
for package in "${dependency[@]}"; do
    if ! is_installed "$package"; then
        if pkg install -y "$package" >/dev/null 2>> "$ERROR_LOG"; then
            printf "%s%s%s %shas been installed successfully.%s\n" "${BLD}" "${KUN}" "$package" "${BRU}" "${RST}"
        else
            printf "%s%s%s %shas not been installed correctly. See %sRiceError.log %sfor more details.%s\n" "${BLD}" "${KUN}" "$package" "${MER}" "${BRU}" "${MER}" "${RST}"
        fi
    else
        printf '%s%s%s %sis already installed on your system!%s\n' "${BLD}" "${KUN}" "$package" "${HIJ}" "${RST}"
    fi
done

logo "Downloading dotfiles"
repo_url="https://github.com/adilhyz/dotfiles-termux"
repo_dir="$HOME/dotfiles-termux"

if [ -d "$repo_dir" ]; then
    printf "Removing existing dotfiles repository\n"
    rm -rf "$repo_dir"
fi

printf "Cloning dotfiles from %s\n" "$repo_url"
git clone --depth=1 "$repo_url" "$repo_dir"
cp -f "$HOME/dotfiles-termux/home/.zshrc" "$HOME"
fc-cache -rv >/dev/null 2>&1
printf "%s%sFiles copied successfully!!%s\n" "${BLD}" "${HIJ}" "${RST}"
printf "%s%sDone!!%s\n\n" "${BLD}" "${HIJ}" "${RST}"

logo "Changing default shell to zsh"

if [[ $SHELL != "zsh" ]]; then
	printf "\n%s%sChanging your shell to zsh.%s\n\n" "${BLD}" "${KUN}" "${RST}"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" --skip-chsh --unattended
	chsh -s zsh
	printf "%s%sShell changed to zsh. Please reboot.%s\n\n" "${BLD}" "${HIJ}" "${RST}"
else
	printf "%s%sYour shell is already zsh\nGood bye! installation finished, now reboot%s\n" "${BLD}" "${HIJ}" "${RST}"
fi

# Mulai setup Arch Linux dengan Proot-Distro
logo "Installing Arch Linux in Termux"
if ! proot-distro list | grep -q "archlinux"; then
    printf "%s%sInstalling Arch Linux...%s\n" "${BLD}" "${HIJ}" "${RST}"
    proot-distro install archlinux
fi


# Jalankan Arch Linux dan buat user baru
logo "Setting up user in Arch Linux"
proot-distro login archlinux -- bash -c "
    printf '\n%s%sEnter new username: %s' '${BLD}' '${KUN}' '${RST}'
    read NEW_USER
    printf '\n%s%sEnter password for user %s: %s' '${BLD}' '${KUN}' '\$NEW_USER' '${RST}'
    read -s NEW_PASS
    printf '\n\n'
    
    pacman -Syu --noconfirm sudo vim

    useradd -m -G wheel -s /bin/zsh \"\$NEW_USER\"
    echo \"\$NEW_USER:\$NEW_PASS\" | chpasswd

    echo \"%wheel ALL=(ALL) ALL\" > /etc/sudoers.d/wheel
    echo \"Defaults editor=/usr/bin/vim\" >> /etc/sudoers
    
    # Simpan username ke file .user.list di Termux
    echo \"\$NEW_USER\" > /data/data/com.termux/files/home/.user.list
"

printf "%s%sUser setup completed! You can now log in as your new user.%s\n" "${BLD}" "${HIJ}" "${RST}"
printf "%s%sType 'proot-distro login archlinux' to start Arch Linux.%s\n" "${BLD}" "${HIJ}" "${RST}"

nyarch() {
  echo -n "\nJalankan Arch Linux? (y/n): "
  read REPLY
  case "$REPLY" in
    y|Y) 
      if [[ -f /data/data/com.termux/files/home/.user.list ]]; then
        USERNAME=$(cat /data/data/com.termux/files/home/.user.list)
        exec proot-distro login archlinux --user "$USERNAME"
      else
        echo "Error: File .user.list not found!"
        return
      fi
      ;;
    n|N) return ;;
    *) echo "Jawaban tidak valid. Silakan masukkan 'y' atau 'n'."; nyarch ;;
  esac
}

# Cek apakah sudah dalam sesi proot
if [[ -z "$PROOT_RUNNING" ]]; then
  export PROOT_RUNNING=1  # Mencegah loop jika logout dari Arch
  
  # Otomatis jalankan Arch Linux dengan konfirmasi
  if [[ -t 1 ]]; then
    nyarch
  fi
fi
