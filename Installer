MER=$(tput setaf 1)
KUN=$(tput setaf 3)
HIJ=$(tput setaf 2)
BRU=$(tput setaf 4)
BLD=$(tput bold)
RST=$(tput sgr0)

date=$(date +%Y%m%d-%H%M%S)
ERROR_LOG="$HOME/RiceError.log"



logo () {
	local text="${1:?}"
	echo -en "
               %%                   
          #%#####*+=                
          @@%@@@@%%#%%              
           %%%%%%%                  
         ##%%%%%###                 
         @%%%%%%%#+#                
         @%%@@@%#**                 
         %%@@@@@%#*  **             
       %%%@@@@@@%%###%              
     %%%%%@@@@@@@%%#   ###          
    %% %%%@@@@@@@@%##%%%%           
   %% %%%@@@@@@@%%%%%               
   %%%%%%%%%@@%%####                
   %%%%%@@@@%%%@@@%%%               
    %%%%%%%@@@@@@%%%%               
    ###%%%@@@@@%@%%%%%              
  ## ###%%%@@@@@@@%#                
       # %%@@@%%%%%                 
           %%%%%%%%                 
           ####%%##*#               
              #####%%%              
      Dotfiles "${HIJ}"Termux"${RST}"\n\n"
}

logo "Welcome!"
while true; do
    read -rp " Do you wish to continue? [y/N]: " yn
    case $yn in
        [Yy]* ) break ;;
        [Nn]* ) exit ;;
        * ) printf " Error: just write 'y' or 'n'\n\n" ;;
    esac
done
#clear

dependency=(pacman proot-distro zsh)

is_installed() {
  pacman -Qi "$1" &> /dev/null
  return $?
}

printf "%s%sChecking for required packages...%s\n" "${BLD}" "${BRU}" "${RST}"
for package in "${dependency[@]}"; do
    if ! is_installed "$package"; then
        if apt install "$package" -y >/dev/null 2> >(tee -a "$ERROR_LOG"); then
            printf "%s%s%s %shas been installed succesfully.%s\n" "${BLD}" "${KUN}" "$package" "${BRU}" "${RST}"
            sleep 1
        else
            printf "%s%s%s %shas not been installed correctly. See %sInstallError.log %sfor more details.%s\n" "${BLD}" "${KUN}" "$package" "${MER}" "${BRU}" "${MER}" "${RST}"
            sleep 1
        fi
    else
        printf '%s%s%s %sis already installed on your system!%s\n' "${BLD}" "${KUN}" "$package" "${HIJ}" "${RST}"
        sleep 1
    fi
done
sleep 5

logo "Downloading dotfiles"
repo_url="https://github.com/adilhyz/dotfiles-termux"
repo_dir="$HOME/dotfiles-termux"

	if [ -d "$repo_dir" ]; then
		printf "Removing existing dotfiles repository\n"
		rm -rf "$repo_dir"
	fi

# Clona el repositorio
printf "Cloning dotfiles from %s\n" "$repo_url"
git clone --depth=1 "$repo_url" "$repo_dir"

sleep 2
clear

cp -f "$HOME"/dotfiles-termux/home/.zshrc "$HOME"
#fc-cache -rv >/dev/null 2>&1
#sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
#git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
printf "%s%sFiles copied succesfully!!%s\n" "${BLD}" "${HIJ}" "${RST}"
sleep 1

printf "%s%sDone!!%s\n\n" "${BLD}" "${HIJ}" "${RST}"
sleep 2
logo "Changing default shell to zsh"

if [[ $SHELL != "/usr/bin/zsh" ]]; then
	printf "\n%s%sChanging your shell to zsh. Your root password is needed.%s\n\n" "${BLD}" "${KUN}" "${RST}"
	# Cambia la shell a zsh
	chsh -s /usr/bin/zsh
	printf "%s%sShell changed to zsh. Please reboot.%s\n\n" "${BLD}" "${HIJ}" "${RST}"
else
	printf "%s%sYour shell is already zsh\nGood bye! installation finished, now reboot%s\n" "${BLD}" "${HIJ}" "${RST}"
fi
zsh